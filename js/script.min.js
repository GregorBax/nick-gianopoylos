$(window).on("load", function() {

    $("#loader").fadeOut(500, function() {
        $("#loader").fadeOut(750);
    });

})

$(document).ready(function() {

    $('#slides').superslides({
        animation: 'fade',
        play: 5000,
        pagination: false
    });

    var typed = new Typed(".typed", {
        strings: ["Computer Engineer.", "Data Scientist."],
        typeSpeed: 90,
        loop: false,
        startDelay: 1000,
        showCursor: false
    });

    const nav = $("#nav-controler");
    const navTop = nav.offset().top;

    $(window).on("scroll", stickyNavigation);

    function stickyNavigation() {

        var body = $("body");

        if ($(window).scrollTop() >= navTop) {
            body.css("padding-top", nav.outerHeight() + "px");
            body.addClass("fixedNav");
        } else {
            body.css("padding-top", 0);
            body.removeClass("fixedNav");
        }




    }



    var canvas = document.getElementById("canvas");
    var ctx = canvas.getContext("2d");

    var grd,
        keys_down = [],
        letters = [];
    //list
    var symbols = [{
            k: 81,
            s: "HTML",
            x: 5
        }, {
            k: 87,
            s: "CSS",
            x: 15
        }, {
            k: 69,
            s: "CMS",
            x: 25
        }, {
            k: 82,
            s: "UML",
            x: 35
        }, {
            k: 84,
            s: "MySQL",
            x: 45
        }, {
            k: 89,
            s: "C",
            x: 55
        },
        {
            k: 85,
            s: "C++",
            x: 65
        }, {
            k: 73,
            s: "JAVA",
            x: 75
        }, {
            k: 79,
            s: "Python",
            x: 85
        }, {
            k: 80,
            s: "MATLAB",
            x: 95
        }, {
            k: 65,
            s: "R",
            x: 10
        }, {
            k: 83,
            s: "SPSS",
            x: 20
        },
        {
            k: 68,
            s: "Big Data",
            x: 30
        }, {
            k: 70,
            s: "Machine Learning",
            x: 40
        }, {
            k: 71,
            s: "Ai",
            x: 50
        },
    ];

    function Letter(key) {
        this.x = findX(key);
        this.symbol = findS(key);
        this.color = "rgba(30,201,173,.3)";
        this.size = Math.floor((Math.random() * 40) + 12);
        this.path = getRandomPath(this.x);
        this.rotate = Math.floor((Math.random() * Math.PI) + 1);
        this.percent = 0;
    }

    Letter.prototype.draw = function() {
        var percent = this.percent / 100;
        var xy = getQuadraticBezierXYatPercent(this.path[0], this.path[1], this.path[2], percent);
        ctx.save();
        ctx.translate(xy.x, xy.y);
        ctx.rotate(this.rotate);
        ctx.font = this.size + "px Arial";
        ctx.fillStyle = this.color;
        ctx.fillText(this.symbol, -15, -15);
        ctx.restore();
    };

    Letter.prototype.drawPath = function() {
        ctx.lineWidth = 1;
        ctx.beginPath();
        ctx.moveTo(this.path[0].x, this.path[0].y);
        ctx.quadraticCurveTo(this.path[1].x, this.path[1].y, this.path[2].x, this.path[2].y);
        ctx.stroke();
    }

    function findX(key) {
        for (var i = 0; i < symbols.length; i++) {
            if (symbols[i].k == key) {
                return (symbols[i].x * canvas.width / 100);
            }
        };
        return false;
    }

    function findS(key) {
        for (var i = 0; i < symbols.length; i++) {
            if (symbols[i].k == key) {
                return symbols[i].s;
            }
        };
        return false;
    }

    function getRandomPath(x) {
        var x_start = x;
        var x_end = x_start + Math.floor((Math.random() * 400) - 199);

        return [{
            x: x_start,
            y: canvas.height
        }, {
            x: (x_start + x_end) / 2,
            y: Math.floor((Math.random() * canvas.height) - canvas.height)
        }, {
            x: x_end,
            y: canvas.height
        }];
    }

    function drawBackground() {
        ctx.fillStyle = grd;
        ctx.fillRect(0, 0, canvas.width, canvas.height);
    }

    function getLineXYatPercent(startPt, endPt, percent) {
        var dx = endPt.x - startPt.x;
        var dy = endPt.y - startPt.y;
        var X = startPt.x + dx * percent;
        var Y = startPt.y + dy * percent;
        return ({
            x: X,
            y: Y
        });
    }

    function getQuadraticBezierXYatPercent(startPt, controlPt, endPt, percent) {
        var x = Math.pow(1 - percent, 2) * startPt.x + 2 * (1 - percent) * percent * controlPt.x + Math.pow(percent, 2) * endPt.x;
        var y = Math.pow(1 - percent, 2) * startPt.y + 2 * (1 - percent) * percent * controlPt.y + Math.pow(percent, 2) * endPt.y;
        return ({
            x: x,
            y: y
        });
    }

    function getCubicBezierXYatPercent(startPt, controlPt1, controlPt2, endPt, percent) {
        var x = CubicN(percent, startPt.x, controlPt1.x, controlPt2.x, endPt.x);
        var y = CubicN(percent, startPt.y, controlPt1.y, controlPt2.y, endPt.y);
        return ({
            x: x,
            y: y
        });
    }

    // function CubicN(pct, a,b,c,d) {
    // 	var t2 = pct * pct;
    // 	var t3 = t2 * pct;
    // 	return a + (-a * 3 + pct * (3 * a - a * pct)) * pct
    // 	+ (3 * b + pct * (-6 * b + b * 3 * pct)) * pct
    // 	+ (c * 3 - c * 3 * pct) * t2
    // 	+ d * t3;
    // }

    function resize() {
        var box = canvas.getBoundingClientRect();
        canvas.width = box.width;
        canvas.height = box.height;
        grd = ctx.createRadialGradient(canvas.width / 2, canvas.height / 2, 0, canvas.width / 2, canvas.height / 2, canvas.height);
        grd.addColorStop(0, "#383838");
        grd.addColorStop(1, "#383838");
    }

    function draw() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        drawBackground();

        for (var i = 0; i < letters.length; i++) {
            letters[i].percent += 1;
            letters[i].draw();
            // letters[i].drawPath();
            if (letters[i].percent > 100) {
                letters.splice(i, 1);
            }
        };

        for (var i = 0; i < keys_down.length; i++) {
            if (keys_down[i]) {
                letters.push(new Letter(i));
            }
        };
        requestAnimationFrame(draw);
    }
    var start_keys = [81, 87, 69, 82, 84, 89, 85, 73, 79, 80];

    function startAnimation() {
        setTimeout(function() {
            var key = start_keys.pop();
            keys_down[key] = true;
            setTimeout(function() {
                keys_down[key] = false;
            }, 50);
            if (start_keys.length > 0) {
                startAnimation();
            }
        }, 100);
    }
    resize();
    draw();
    //startAnimation();
    //function for repeat animation
    setInterval(function() {
        start_keys = [81, 87, 69, 82, 84, 89, 85, 73, 79, 80]; //words to show
        startAnimation();

    }, 1500, startAnimation());
    window.onresize = resize;

    window.requestAnimationFrame = (function() {
        return window.requestAnimationFrame ||
            window.webkitRequestAnimationFrame ||
            window.mozRequestAnimationFrame ||
            window.oRequestAnimationFrame ||
            window.msRequestAnimationFrame ||
            function(callback) {
                window.setTimeout(callback, 1000 / 60);
            };
    })();


});